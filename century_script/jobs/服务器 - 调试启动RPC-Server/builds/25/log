Started by user [8mha:////4NL15lwhNok46o8LpNIYOqAIaurwr6Vm2yW5YSW4R5+wAAAAlh+LCAAAAAAAAP9b85aBtbiIQTGjNKU4P08vOT+vOD8nVc83PyU1x6OyILUoJzMv2y+/JJUBAhiZGBgqihhk0NSjKDWzXb3RdlLBUSYGJk8GtpzUvPSSDB8G5tKinBIGIZ+sxLJE/ZzEvHT94JKizLx0a6BxUmjGOUNodHsLgAyWEgYu/dLi1CL9ovz8EgDKVWzSvwAAAA==[0mroot
Running as SYSTEM
[EnvInject] - Loading node environment variables.
Building in workspace /var/jenkins_home/workspace/ÊúçÂä°Âô® - Ë∞ÉËØïÂêØÂä®RPC-Server
[8mha:////4IsU9HANxs1JfqzudoT8w97pKS9ZLcs/oPOHvFFt3T+PAAAAqx+LCAAAAAAAAP9b85aBtbiIQSujNKU4P0+vIKc0PTOvWC8xrzgzOT8nv0gvMbkkEyjhCKb88ktSdwVsu2efuqidiYHRh4EDIu2ZUsIg5JOVWJaon5OYl64fXFKUmZduXVHEIAU1ODk/rzg/J1XPGUKDDGKAAEYmBoaKghIGleSkpFRLi8RE3WSDZGNdE8tkC91EMwND3cREc9MkM4NkI1NzSwDyJAXwrwAAAA==[0m[SSH] executing pre build script:
server_name="pk7001"

#!/bin/bash 
source /root/jenkins/jk_func.sh

file_lock

yaml $conf_file "['$server_name']"
branch_name=$(yaml $conf_file "['$server_name']['bandit']")
rpc_port=$(yaml $conf_file "['$server_name']['rpc_port']")

cd /mnt/slots/bandit-server
git cd $branch_name
check_last_cmd branch

git pull
check_last_cmd pull

cd /mnt/slots/cc-slots-land/batch
git checkout feature/jenkins

./compile_rpc_gdb.sh $server_name && ./build_image_rpc_gdb.sh $server_name && ./run_image_rpc_gdb.sh $server_name $rpc_port

cd /mnt/slots/cc-slots-land/batch
git checkout master
file_unlock
ËÑöÊú¨ÂèØÊâßË°å
{'bandit': 'feature/lavaCash', 'game': 'feature/lavaCash', 'cc-conf': 'deploy-cc-conf', 'desc': 'pk7001', 'rpc_port': 7011, 'bandit-conf': 'deploy-bandit-conf', 'port': 7001}
Already on 'feature/lavaCash'
Already up-to-date.
Switched to branch 'feature/jenkins'
[0;35m              ARCH:[0m linux
[0;35m          LOCAL_IP:[0m 10.0.84.16
[0;35m               APP:[0m pk7001
[0;32m           APP_DIR:[0m /home/user00/cc/cc-slots-land/stage/app=pk7001/app
[0;32m       Fluentd-DIR:[0m /mnt/slots/cc-slots-land/batch/pk7001/fluentd
[0;32m         Mongo-DIR:[0m /mnt/slots/cc-slots-land/batch/pk7001/mongo
[0;32m         Redis-DIR:[0m /mnt/slots/cc-slots-land/batch/pk7001/redis
[0;32m       PM_CONF_DIR:[0m /home/user00/cc/cc-conf/gen/rawdata/server
[0;35m  BACKEND_CODE_DIR:[0m /home/user00/cc/cc-server
[0;35m  BACKEND_CONF_DIR:[0m /home/user00/cc/cc-conf
[1;33m   BANDIT_CODE_DIR:[0m /home/user00/cc/bandit-server
[1;33m   BANDIT_CONF_DIR:[0m /home/user00/cc/bandit-conf
[0;35m   BACKEND_PM_PATH:[0m /pk7001_dev_backend
[1;33m    BANDIT_PM_PATH:[0m /pk7001_dev_bandit
[0;35m           Network:[0m pk7001
[0;35m    ETCD_ENDPOINTS:[0m 10.0.84.16:2379
[0;35m         REDIS_URI:[0m pk7001-redis:6379
[0;35m Backend-Container:[0m pk7001-backend
[1;33m  BANDIT-Container:[0m pk7001-rpc
[0;32m Fluentd-Container:[0m pk7001-fluentd
[0;32m   Mongo-Container:[0m pk7001-mongo
[0;32m   Redis-Container:[0m pk7001-redis
[1;33m            DATE:[0m 2023-03-24T16:14:57+0800
[1;33m   BUILD COMMAND:[0m cd bandit-server/cmd/server && go build -gcflags "-N -l" -ldflags '-X main.buildTime=2023-03-24T16:14:57+0800 -X main.buildCodeVer=feature/lavaCash:d39bce7 -X main.buildConfVer=v1.1.16'
[1;33m           IMAGE:[0m slots/backend-builder:latest
[1;33m       CONTAINER:[0m rpc-backend-builder
[1;33m          GO_DIR:[0m /home/user00/cc/cc-slots-land/go
[1;33m        CODE_DIR:[0m /home/user00/cc/bandit-server feature/lavaCash:d39bce7
[1;33m        CONF_DIR:[0m /home/user00/cc/bandit-conf v1.1.16
[1;33m       BUILD_DIR:[0m /slots
[1;33m  BUILD_CONF_DIR:[0m /cc-conf
[1;33m     CONFIG_FILE:[0m pk7001/config.ini
[1;33mCONFIG_FILE_PROD:[0m pk7001/config.ini
[0;32mMOUNT_CONF_LOADER => /home/user00/cc/bandit-conf/gen/golang/conf:/slots/server/pkg/gen/golang/conf[0m
[0;32m MOUNT_CONF_MODEL => /home/user00/cc/bandit-conf/gen/golang/rawdata:/cc-conf/gen/golang/rawdata[0m
[0;36mreclaim resources: rpc-backend-builder 298aab3c9850[0m
298aab3c9850
298aab3c9850
[0;36mdocker run -it   --name "rpc-backend-builder"   --hostname "rpc-backend-builder"   -v "/home/user00/cc/cc-slots-land/go":/go   -v "/home/user00/cc/bandit-server":"/slots/bandit-server"   -v "/home/user00/cc/bandit-conf":"/slots/bandit-conf"   -v "/home/user00/cc/bandit-conf/gen/golang/conf:/slots/server/pkg/gen/golang/conf"   -v "/home/user00/cc/bandit-conf/gen/golang/rawdata:/cc-conf/gen/golang/rawdata"    "slots/backend-builder:latest"   sh -c "cd bandit-server/cmd/server && go build -gcflags "-N -l" -ldflags '-X main.buildTime=2023-03-24T16:14:57+0800 -X main.buildCodeVer=feature/lavaCash:d39bce7 -X main.buildConfVer=v1.1.16'"[0m
# gitlab.funplus.io/fruities/bandit-server/app/slots
../../app/slots/MathGames.go:64:2: train2 redeclared as imported package name
	/slots/bandit-server/app/slots/MathGames.go:21:2: previous declaration
[0;31mbuild failed[0m
Switched to branch 'master'
ÈáäÊîæËÑöÊú¨ÈîÅ

[SSH] completed
[SSH] exit-status: 0

[SSH] executing post build script:
server_name="pk7001"
BUILD_URL="http://10.0.84.16:8083/job/%E6%9C%8D%E5%8A%A1%E5%99%A8%20-%20%E8%B0%83%E8%AF%95%E5%90%AF%E5%8A%A8RPC-Server/25/"

check_container() {
    exist=`docker inspect --format '{{.State.Running}}' $1`
    if [[ $exist == `false` ]];then
        echo $1" not OK"
        curl 'https://oapi.dingtalk.com/robot/send?access_token=13aa551ba8a79265c4424316089cd31c4f479b0f685f3d5a503b0ab6a1a42ec7' -H 'Content-Type: application/json'  -d '{"msgtype": "link","link": {"messageUrl": "'"${BUILD_URL}"'/console","title": "Jenkins-RPC['"${server_name}"']-Failed","text": "check log for more detail"}}'
        exit 1
    else
        echo $1" Check"
    fi
}

check_whole_server() {
	check_container $1-backend
	check_container $1-rpc
	check_container $1-redis
	check_container $1-mongo
	check_container $1-fluentd
}
sleep 5
check_whole_server $server_name
curl 'https://oapi.dingtalk.com/robot/send?access_token=13aa551ba8a79265c4424316089cd31c4f479b0f685f3d5a503b0ab6a1a42ec7' -H 'Content-Type: application/json'  -d '{"msgtype": "text","text": {"content": "Jenkins-RPC-Server['"${server_name}"'] Restart OK"}}'
pk7001-backend Check
pk7001-rpc Check
pk7001-redis Check
pk7001-mongo Check
pk7001-fluentd Check
{"errcode":0,"errmsg":"ok"}
[SSH] completed
[SSH] exit-status: 0

Finished: SUCCESS
